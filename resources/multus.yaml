---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: network-attachment-definitions.k8s.cni.cncf.io
spec:
  group: k8s.cni.cncf.io
  scope: Namespaced
  names:
    plural: network-attachment-definitions
    singular: network-attachment-definition
    kind: NetworkAttachmentDefinition
    shortNames:
    - net-attach-def
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: 'NetworkAttachmentDefinition is a CRD schema specified by the Network Plumbing
            Working Group to express the intent for attaching pods to one or more logical or physical
            networks. More information available at: https://github.com/k8snetworkplumbingwg/multi-net-spec'
          type: object
          properties:
            spec:
              description: 'NetworkAttachmentDefinition spec defines the desired state of a network attachment'
              type: object
              properties:
                config:
                  description: 'NetworkAttachmentDefinition config is a JSON-formatted CNI configuration'
                  type: string
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: multus
rules:
  - apiGroups: ["k8s.cni.cncf.io"]
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/status
    verbs:
      - get
      - update
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: multus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: multus
subjects:
- kind: ServiceAccount
  name: multus
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: multus
  namespace: kube-system
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: multus-cni-config
  namespace: kube-system
  labels:
    tier: node
    app: multus
data:
  #"clusterNetwork": "k8s-pod-network",
  cni-conf-calico-primary.json: |
    {
      "name": "multus-cni-network",
      "cniVersion": "0.3.1",
      "plugins": [
        {
          "cniVersion": "0.3.1",
          "name": "multus-cni-network",
          "type": "multus",
          "kubeconfig": "/etc/cni/net.d/multus.d/multus.kubeconfig",
          "confDir": "/etc/cni/net.d",
          "clusterNetwork": "k8s-pod-network",
          "defaultNetworks": ["cilium"],
          "systemNamespaces": [""]
        }
      ]
    }
  cni-conf-cilium-primary.json: |
    {
      "name": "multus-cni-network",
      "cniVersion": "0.3.1",
      "plugins": [
        {
          "cniVersion": "0.3.1",
          "name": "multus-cni-network",
          "type": "multus",
          "kubeconfig": "/etc/cni/net.d/multus.d/multus.kubeconfig",
          "confDir": "/etc/cni/net.d",
          "clusterNetwork": "cilium",
          "defaultNetworks": ["k8s-pod-network"],
          "systemNamespaces": [""]
        }
      ]
    }
  cni-conf-calico.json: |
   {
     "name": "k8s-pod-network",
     "cniVersion": "0.3.1",
     "plugins": [
       {
         "type": "calico",
         "log_level": "info",
         "log_file_path": "/var/log/calico/cni/cni.log",
         "datastore_type": "kubernetes",
         "nodename": "ip-172-20-117-168.ec2.internal",
         "mtu": 0,
         "ipam": {
           "type": "calico-ipam"
         },
         "policy": {
           "type": "k8s"
         },
         "kubernetes": {
           "kubeconfig": "/etc/cni/net.d/calico-kubeconfig"
         }
       },
       {
         "type": "portmap",
         "snat": true,
         "capabilities": { "portMappings": true }
       },
       {
         "type": "sbr"
       }
     ]
   }
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-multus-calico
  namespace: kube-system
  labels:
    tier: node
    app: multus
    name: multus
    primary: calico
spec:
  selector:
    matchLabels:
      name: multus
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        tier: node
        app: multus
        name: multus
        primary: calico
    spec:
      hostNetwork: true
      nodeSelector:
        kubernetes.io/arch: amd64
        node-role.kubernetes.io/priority-calico: "true"
      tolerations:
      - operator: Exists
        effect: NoSchedule
      serviceAccountName: multus
      initContainers:
      - name: install-cni
        image: gcr.io/jetstack-cre/multus:v3.4.1-cni-bundle-1
        command:
        - "/bin/bash"
        - "-c"
        # Set cbr on calico CNI chaining config
        - "CNI_PATH='/host/etc/cni/net.d/10-calico.conflist'; CNI_CONFIG=$(cat $CNI_PATH); if [[ ! $(echo $CNI_CONFIG  | jq '.plugins | .[] | select(.type == \"sbr\")') ]]; then echo $CNI_CONFIG | jq '.plugins += [{\"type\": \"sbr\"}]' > $CNI_PATH  ; fi && cp /opt/cni/bin/* /host/opt/cni/bin"
        volumeMounts:
        - name: cni
          mountPath: /host/etc/cni/net.d
        - name: cnibin
          mountPath: /host/opt/cni/bin
        securityContext:
          privileged: true
      containers:
      - name: kube-multus
        image: gcr.io/jetstack-cre/multus:v3.4.1-cni-bundle-1
        command: ["/entrypoint.sh"]
        args:
        - "--multus-conf-file=/tmp/multus-conf/00-multus.conflist"
        - "--namespace-isolation=false"
        - "--cni-version=0.3.1"
        - "--multus-kubeconfig-file-host=/etc/cni/net.d/multus.d/multus.kubeconfig"
        resources:
          requests:
            cpu: "100m"
            memory: "50Mi"
          limits:
            cpu: "100m"
            memory: "50Mi"
        securityContext:
          privileged: true
        volumeMounts:
        - name: cni
          mountPath: /host/etc/cni/net.d
        - name: cnibin
          mountPath: /host/opt/cni/bin
        - name: multus-cfg
          mountPath: /tmp/multus-conf
      volumes:
        - name: cni
          hostPath:
            path: /etc/cni/net.d
        - name: cnibin
          hostPath:
            path: /opt/cni/bin
        - name: multus-cfg
          configMap:
            name: multus-cni-config
            items:
            - key: cni-conf-calico-primary.json
              path: 00-multus.conflist
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-multus-cilium
  namespace: kube-system
  labels:
    tier: node
    app: multus
    name: multus
    primary: cilium
spec:
  selector:
    matchLabels:
      name: multus
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        tier: node
        app: multus
        name: multus
        primary: cilium
    spec:
      hostNetwork: true
      nodeSelector:
        kubernetes.io/arch: amd64
        node-role.kubernetes.io/priority-cilium: "true"
      tolerations:
      - operator: Exists
        effect: NoSchedule
      serviceAccountName: multus
      initContainers:
      - name: install-cni
        image: gcr.io/jetstack-cre/multus:v3.4.1-cni-bundle-1
        command:
        - "/bin/bash"
        - "-c"
        - "cp /opt/cni/bin/* /host/opt/cni/bin && cat /tmp/99-calico.conflist > /host/etc/cni/net.d/99-calico.conflist"
        volumeMounts:
        - name: cni
          mountPath: /host/etc/cni/net.d
        - name: cnibin
          mountPath: /host/opt/cni/bin
        - name: calico-cfg
          mountPath: /tmp
        securityContext:
          privileged: true
      containers:
      - name: kube-multus
        image: gcr.io/jetstack-cre/multus:v3.4.1-cni-bundle-1
        command: ["/entrypoint.sh"]
        args:
        - "--multus-conf-file=/tmp/multus-conf/00-multus.conflist"
        - "--namespace-isolation=false"
        - "--cni-version=0.3.1"
        - "--multus-kubeconfig-file-host=/etc/cni/net.d/multus.d/multus.kubeconfig"
        resources:
          requests:
            cpu: "100m"
            memory: "50Mi"
          limits:
            cpu: "100m"
            memory: "50Mi"
        securityContext:
          privileged: true
        volumeMounts:
        - name: cni
          mountPath: /host/etc/cni/net.d
        - name: cnibin
          mountPath: /host/opt/cni/bin
        - name: multus-cfg
          mountPath: /tmp/multus-conf
      volumes:
        - name: cni
          hostPath:
            path: /etc/cni/net.d
        - name: cnibin
          hostPath:
            path: /opt/cni/bin
        - name: multus-cfg
          configMap:
            name: multus-cni-config
            items:
            - key: cni-conf-cilium-primary.json
              path: 00-multus.conflist
        - name: calico-cfg
          configMap:
            name: multus-cni-config
            items:
            - key: cni-conf-calico.json
              path: 99-calico.conflist
